name: CI Tests and Build

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test on Node.js ${{ matrix.node_version }} and platform ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12.x, 14.x, 16.x]
        platform: [ubuntu-latest, mac-lastest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
          args: install:ci

      - name: Install dependencies
        run: yarn install:ci

      - name: Run unit tests
        run: yarn test:unit

      - name: Prepare database and run integration tests...
        env:
          STRIPE_SECRET_API_KEY: ${{ secrets.STRIPE_SECRET_API_KEY_TEST }}
          STRIPE_API_VERSION: ${{ secrets.STRIPE_API_VERSION }}
          ELEPHANT_API_KEY: ${{ secrets.ELEPHANT_API_KEY_TEST }}
        run: |
          docker build -t be-a-savior/server . \
          --build-arg ELEPHANT_API_KEY=${{ secrets.ELEPHANT_API_KEY_TEST }} \
          --build-arg STRIPE_SECRET_API_KEY=${{ secrets.STRIPE_SECRET_API_KEY }} \
          --build-arg GITHUB_ACTIONS=$GITHUB_ACTIONS \
          --no-cache

  clean:
    needs: test
    name: Clean test databases with Node.js ${{ matrix.node_version }} and platform ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [16.x]
        platform: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install dependencies
        run: yarn install:ci

      - name: Clean test databases
        env:
          STRIPE_SECRET_API_KEY: ${{ secrets.STRIPE_SECRET_API_KEY_TEST }}
          ELEPHANT_API_KEY: ${{ secrets.ELEPHANT_API_KEY_TEST }}
        run: |
          yarn clean:elephant:instances:team
    
  build:
    name: Build on Node.js ${{ matrix.node_version }} and platform ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12.x, 14.x, 16.x]
        platform: [ubuntu-latest, mac-lastest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install dependencies
        run: yarn install:ci

      - name: Build
        run: yarn build

  deploy:
    name: Deploy on Node.js ${{ matrix.node_version }} and Platform ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [16.x]
        platform: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Deploy to Heroku. # Your custom step name
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0 # use the latest version of the action
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: be-a-savior
          dockerfile_path: Dockerfile.production
